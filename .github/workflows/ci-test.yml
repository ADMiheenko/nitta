name: test_nitta

on: [push]

jobs:
  nitta:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache haskell-stack
        uses: actions/cache@v2.1.3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-haskell-stack-${{ hashFiles('**/stack.yaml', '**/package.yaml') }}

      - name: Cache node_modules
        uses: actions/cache@v2.1.3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install haskell-stack
        uses: actions/setup-haskell@v1.1.3
        with:
          enable-stack: true
          stack-version: 'latest'

      - name: Setup PATH
        run: echo ~/.local/bin >> $GITHUB_PATH

      - name: Install Icarus Verilog
        run: sudo apt-get install iverilog

      - name: Build nitta backend dependencies
        run: |
          stack build --haddock --test --only-dependencies
          stack install doctest

      - name: Build & test nitta backend
        run: stack build --haddock --test --copy-bins

      - name: Generate backend API
        run: stack exec nitta-api-gen

      - name: Build nitta frontend dependencies
        working-directory: ./web
        run: yarn install

      - name: Build frontend
        working-directory: ./web
        timeout-minutes: 5
        run: yarn build


  nitta-doctest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache haskell-stack
        uses: actions/cache@v2.1.3
        with:
          path: ~/.stack
          key: ${{ runner.os }}-haskell-stack-${{ hashFiles('**/stack.yaml', '**/package.yaml') }}

      - name: Install haskell-stack
        uses: actions/setup-haskell@v1.1.3
        with:
          enable-stack: true
          stack-version: 'latest'

      - name: Build nitta backend dependencies
        run: |
          stack build --haddock --test --only-dependencies
          stack install doctest

      - name: Check examples by doctest
        run: |
          stack build --fast
          find src -name '*.hs' -exec grep -l '>>>' {} \; | xargs -t -L 1 -P 4 stack exec doctest


  nitta-hdl:
    runs-on: ubuntu-latest
    container: ryukzak/alpine-iverilog
    steps:
      - uses: actions/checkout@v2
      - run: |
          make -C hdl > make_hdl.log
          cat make_hdl.log
          grep ERROR make_hdl.log
          # test "$(grep -c ERROR make_hdl.log)" -eq 0


defaults:
  run:
    shell: sh
